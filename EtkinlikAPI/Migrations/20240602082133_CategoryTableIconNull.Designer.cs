// <auto-generated />
using System;
using EtkinlikAPI.Models.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EtkinlikAPI.Migrations
{
    [DbContext(typeof(AkademiEventContext))]
    [Migration("20240602082133_CategoryTableIconNull")]
    partial class CategoryTableIconNull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("EtkinlikAPI.Models.ORM.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("CityID");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("EtkinlikAPI.Models.ORM.ActivityImages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActivityID");

                    b.ToTable("ActivityImages");
                });

            modelBuilder.Entity("EtkinlikAPI.Models.ORM.AdminUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("EtkinlikAPI.Models.ORM.BlogPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BlogPosts");
                });

            modelBuilder.Entity("EtkinlikAPI.Models.ORM.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69054b03-687c-45ad-a1f5-fb8d32d7fefe"),
                            AddDate = new DateTime(2024, 6, 2, 11, 21, 32, 904, DateTimeKind.Local).AddTicks(8666),
                            IsDeleted = false,
                            Name = "Yazılım"
                        },
                        new
                        {
                            Id = new Guid("60024570-ff17-4044-bef5-d9c37614418d"),
                            AddDate = new DateTime(2024, 6, 2, 11, 21, 32, 904, DateTimeKind.Local).AddTicks(8699),
                            IsDeleted = false,
                            Name = "Teknoloji"
                        },
                        new
                        {
                            Id = new Guid("6e1b7942-86b1-4180-8d34-3ae1d9fff2d0"),
                            AddDate = new DateTime(2024, 6, 2, 11, 21, 32, 904, DateTimeKind.Local).AddTicks(8710),
                            IsDeleted = false,
                            Name = "Eğitim"
                        },
                        new
                        {
                            Id = new Guid("511018ca-7efe-4e78-8de2-b299b687ce62"),
                            AddDate = new DateTime(2024, 6, 2, 11, 21, 32, 904, DateTimeKind.Local).AddTicks(8721),
                            IsDeleted = false,
                            Name = "Sağlık"
                        },
                        new
                        {
                            Id = new Guid("e4dd4dcc-f116-4f95-b5ab-4ad5c9f4df11"),
                            AddDate = new DateTime(2024, 6, 2, 11, 21, 32, 904, DateTimeKind.Local).AddTicks(8732),
                            IsDeleted = false,
                            Name = "Spor"
                        },
                        new
                        {
                            Id = new Guid("5a163cbc-dc3d-432f-8e4f-dbf0e2c7fbdc"),
                            AddDate = new DateTime(2024, 6, 2, 11, 21, 32, 904, DateTimeKind.Local).AddTicks(8744),
                            IsDeleted = false,
                            Name = "Sanat"
                        },
                        new
                        {
                            Id = new Guid("d78b8bad-0aeb-4a2b-8299-ec89088248c6"),
                            AddDate = new DateTime(2024, 6, 2, 11, 21, 32, 904, DateTimeKind.Local).AddTicks(8754),
                            IsDeleted = false,
                            Name = "Müzik"
                        },
                        new
                        {
                            Id = new Guid("2d2f6f35-c642-4e2f-a97a-d53522663c40"),
                            AddDate = new DateTime(2024, 6, 2, 11, 21, 32, 904, DateTimeKind.Local).AddTicks(8772),
                            IsDeleted = false,
                            Name = "Eğlence"
                        },
                        new
                        {
                            Id = new Guid("baaa54dc-5d52-419a-898f-a0aac633138a"),
                            AddDate = new DateTime(2024, 6, 2, 11, 21, 32, 904, DateTimeKind.Local).AddTicks(8783),
                            IsDeleted = false,
                            Name = "Diğer"
                        });
                });

            modelBuilder.Entity("EtkinlikAPI.Models.ORM.Activity", b =>
                {
                    b.HasOne("EtkinlikAPI.Models.ORM.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("City", "City")
                        .WithMany()
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("City");
                });

            modelBuilder.Entity("EtkinlikAPI.Models.ORM.ActivityImages", b =>
                {
                    b.HasOne("EtkinlikAPI.Models.ORM.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });
#pragma warning restore 612, 618
        }
    }
}
